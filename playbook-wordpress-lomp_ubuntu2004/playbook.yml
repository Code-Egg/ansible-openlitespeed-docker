---
- hosts: all
  become: true
  vars_files:
    - vars/default.yml

  tasks:
    - name: Install prerequisites
      apt: name=aptitude update_cache=yes state=latest force_apt_get=yes
      tags: [ system ]

    - name: Install LiteSpeed repository
      shell: wget -O - http://rpms.litespeedtech.com/debian/enable_lst_debian_repo.sh | bash

    - name: Install LOMP Packages
      apt: name={{ item }} update_cache=yes state=latest
      loop: [ 'openlitespeed', 'mysql-server', 'python3-pymysql', 'lsphp74', 'lsphp74-mysql', 'lsphp74-common', 'lsphp74-json' ]
      tags: [ system ]

    - name: Install PHP Extensions
      apt: name={{ item }} update_cache=yes state=latest
      loop: "{{ php_modules }}"
      tags: [ system ]

  # OpenLiteSpeed Configuration
    - name: Create document root
      file:
        path: "/var/www/{{ http_host }}"
        state: directory
        owner: "www-data"
        group: "www-data"
        mode: '0755'
      tags: [ openlitespeed ]

    - name: Set up openlitespeed ServerConf
      template:
        src: "files/httpd-config.conf.j2"
        dest: "/usr/local/lsws/conf/httpd_config.conf"
        force: yes
        owner: "lsadm"
      #notify: Restart openlitespeed
      tags: [ openlitespeed ]

    - name: Set up openlitespeed VirtualHost
      template:
        src: "files/vhconf.conf.j2"
        dest: "/usr/local/lsws/conf/vhosts/Example/vhconf.conf"
        force: yes
        owner: "lsadm"
      #notify: Restart openlitespeed
      tags: [ openlitespeed ]

    - name: remove openlitespeed
      apt: name=openlitespeed state=absent

    - name: install openlitespeed
      apt: name=openlitespeed state=present

  # MySQL Configuration
    - name: Set the root password
      mysql_user:
        name: root
        password: "{{ mysql_root_password }}"
        login_unix_socket: /var/run/mysqld/mysqld.sock
      tags: [ mysql, mysql-root ]

    - name: Remove all anonymous user accounts
      mysql_user:
        name: ''
        host_all: yes
        state: absent
        login_user: root
        login_password: "{{ mysql_root_password }}"
      tags: [ mysql ]

    - name: Remove the MySQL test database
      mysql_db:
        name: test
        state: absent
        login_user: root
        login_password: "{{ mysql_root_password }}"
      tags: [ mysql ]

    - name: Creates database for WordPress
      mysql_db:
        name: "{{ mysql_db }}"
        state: present
        login_user: root
        login_password: "{{ mysql_root_password }}"
      tags: [ mysql ]

    - name: Create MySQL user for WordPress
      mysql_user:
        name: "{{ mysql_user }}"
        password: "{{ mysql_password }}"
        priv: "{{ mysql_db }}.*:ALL"
        state: present
        login_user: root
        login_password: "{{ mysql_root_password }}"
      tags: [ mysql ]

  # UFW Configuration
    - name: "UFW - Allow HTTP on port {{ http_port }}"
      ufw:
        rule: allow
        port: "{{ http_port }}"
        proto: tcp
      tags: [ system ]
    - name: "UFW - Allow HTTPS on port {{ https_port }}"
      ufw:
        rule: allow
        port: "{{ https_port }}"
        proto: tcp
      tags: [ system ]

  # WordPress Configuration
    - name: Download and unpack latest WordPress
      unarchive:
        src: https://wordpress.org/latest.tar.gz
        dest: "/var/www/{{ http_host }}"
        remote_src: yes
        creates: "/var/www/{{ http_host }}/wordpress"
      tags: [ wordpress ]

    - name: Set ownership
      file:
        path: "/var/www/{{ http_host }}"
        state: directory
        recurse: yes
        owner: www-data
        group: www-data
      tags: [ wordpress ]

    - name: Set permissions for directories
      shell: "/usr/bin/find /var/www/{{ http_host }}/wordpress/ -type d -exec chmod 750 {} \\;"
      tags: [ wordpress ]

    - name: Set permissions for files
      shell: "/usr/bin/find /var/www/{{ http_host }}/wordpress/ -type f -exec chmod 640 {} \\;"
      tags: [ wordpress ]

    - name: Set up wp-config
      template:
        src: "files/wp-config.php.j2"
        dest: "/var/www/{{ http_host }}/wordpress/wp-config.php"
      tags: [ wordpress ]

  handlers:
    - name: Restart openlitespeed
      service:
        name: lsws
        state: restarted